name: Build and Release

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: spring-native-demo-jar
          path: target/*.jar

  native-graalvm:
    name: native on ${{ matrix.os }}
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ ubuntu-latest, windows-latest]
        # os: [ ubuntu-latest]
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v4

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'
      - name: export info
        run: |
          echo "GRAALVM_HOME: $GRAALVM_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          java --version
          native-image --version
      - name: Build Native Image  #mvn -Pnative native:compile -Dnative-image.xargs="--static --libc=musl"
        run: |
          mvn -Pnative native:compile
      - name: Remove unwanted files on non-Windows
        if: runner.os != 'Windows'
        run: |
          find target -name "spring-native-demo*.jar" -delete
          find target -name "spring-native-demo*.jar.original" -delete
      - name: Remove unwanted files on Windows
        if: runner.os == 'Windows'
        run: |
          Remove-Item -Path "target\spring-native-demo*.jar" -Force
          Remove-Item -Path "target\spring-native-demo*.jar.original" -Force
      - name: Upload Binary
        uses: actions/upload-artifact@v4
        with:
          name: spring-native-demo-${{ matrix.os }}
          path: target/spring-native-demo*

  create-release:
    needs: [native-graalvm]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Rename release assets
         # cp artifacts/spring-native-demo-macos-latest/spring-native-demo artifact/spring-native-demo-latests/spring-native-demo-macos
        run: |
          ls -lR artifacts
          mkdir -p artifacts/spring-native-demo-latest/
          cp artifacts/spring-native-demo-macos-latest/spring-native-demo artifact/spring-native-demo-latests/spring-native-demo-macos
          cp artifacts/spring-native-demo-ubuntu-latest/spring-native-demo artifacts/spring-native-demo-latest/spring-native-demo-ubuntu
          cp artifacts/spring-native-demo-windows-latest/spring-native-demo.exe artifacts/spring-native-demo-latest/spring-native-demo.exe

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          draft: false
          prerelease: false
          files: |
            artifacts/spring-native-demo-latest/spring-native-demo*
            artifacts/spring-native-demo-jar/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
